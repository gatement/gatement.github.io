""== set the following two lines in vimrc ==
"set runtimepath^=path/to/vimfiles/folder
"source path/to/vimrc/file

function! EscapeString (string)
	let string=a:string
	let string = escape(string, '^$.*\/~[]')
	let string = substitute(string, '\n', '\\n', 'g')
	return string
endfunction

function! GetVisual() range	" rang argument???
	let reg_save = getreg('"')
	let regtype_save = getregtype('"')
	let cb_save = &clipboard
	set clipboard&

	normal! ""gvy
	let selection = getreg('"')

	call setreg('"', reg_save, regtype_save)
	let &clipboard = cb_save

	let escaped_selection = EscapeString(selection)

	return escaped_selection
endfunction

""==== global ====
""return to last edit position when opening files
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif

""disable .swp file
set noswapfile
set nobackup
set nowritebackup

color desert
"color murphy
set guioptions=e
set guifont=menlo:h16

""indent
"set cindent
set autoindent
"set smartindent

""high light search
set hlsearch

""set line number
set nu

""tab
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab

""==== netrw ====
let g:netrw_list_hide= '.*\.swp$,.*\.class'
""tree style listing
let g:netrw_liststyle= 3 
let g:netrw_winsize= 75

""==== pathogen ====
execute pathogen#infect()
execute pathogen#helptags()

""===== NERDTree =====
let NERDTreeIgnore= ['\.swp$', '\.pyc$']
nmap <SPACE>n :NERDTreeToggle<CR>
nmap <SPACE>f :NERDTreeFind<CR>

""===== tabbar =====
nmap <SPACE>t :TagbarToggle<CR><C-w>l

""===== vim-scala =====
let g:scala_scaladoc_indent = 1

""==== shortcuts ====
""next tab
nmap <C-S-l> :tabn<CR>
""previous tab
nmap <C-S-h> :tabp<CR>

""edit: go left
imap <c-b> <left>
""edit: go right
imap <c-f> <right>
""edit: delete
imap <c-d> <delete>
""edit: backspace
imap <c-h> <backspace>
""edit: delete till begin of line
imap <c-u> <Esc>d0xi
""edit: delete till end of line
imap <c-k> <Esc><right>d$a

""select all
nmap <SPACE>a <Esc>GVgg 
""save
nmap <c-k> :w<CR>
""copy
vmap <SPACE>y "*y

""cursor: right
nmap <SPACE>l <C-w>l
""cursor: left
nmap <SPACE>h <C-w>h
""cursor: down
nmap <SPACE>j <C-w>j
""cursor: up
nmap <SPACE>k <C-w>k
""jump between last two frames
nmap <c-j> <c-^>

""wrap text
nmap <SPACE>o <Esc>:set wrap!<CR>

""replace selected in current file
vmap <SPACE>r <Esc>:%s/<c-r>=GetVisual()<cr>//gc<left><left><left>

""replace selected in multi-files
nmap <SPACE>q <Esc>:args **/*.*
vmap <SPACE>w <Esc>:argdo %s/<c-r>=GetVisual()<cr>//gc \| update<left><left><left><left><left><left><left><left><left><left><left><left>

""vimgrep
nmap <SPACE>g :vimgrep //g **/*.*<left><left><left><left><left><left><left><left><left>
vmap <SPACE>g <Esc>:vimgrep /<c-r>=GetVisual()<cr>/g **/*.*
nmap go :copen<CR>
nmap gc :cclose<CR>
nmap gn :cn<CR>
nmap gp :cp<CR>

""hex mode
nmap <SPACE>b :%!xxd <CR>
nmap <SPACE>v :%!xxd -r <CR>

""json format
nmap <SPACE>i :%!python -m json.tool <CR>
